from telegram import InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton
import urllib.parse

from enum import Enum


class Lang(Enum):
    EN = "en"
    RU = "ru"


token = ""  # ENTER TOKEN

choose_language_message = '''Choose language
_________ 

–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫'''

admin_statistics_loading_text = '''Statistics:
    Total users: ...,
    Total users subscribed: ...
'''

admin_panel_text = "Admin panel"
admin_send_message_text = "Send me the message!"
admin_message_text_confirmation = "Is this your message?"
admin_message_button_question = "Add buttons?"
admin_message_button_title_question = "Send me the button label"
admin_message_button_url_question = "Send me the button url"
admin_message_confirmation_send_text = "Send the message?"
messages_sent_text = "Messages sent!"


def get_enter_address_text(lang: Lang) -> str:
    if lang == Lang.EN:
        return '''<b>Welcome to Gemz Trade Waitlist Bot!</b>

Enter your TON wallet below to join'''
    if lang == Lang.RU:
        return '''<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ª–∏—Å—Ç –æ–∂–∏–¥–∞–Ω–∏—è Gemz Trade!</b>

–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –≤–∞—à–µ–≥–æ TON –∫–æ—à–µ–ª—å–∫–∞'''


def get_invalid_address_text(lang: Lang) -> str:
    if lang == Lang.EN:
        return "Wrong format, check your address"
    if lang == Lang.RU:
        return "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∞–¥—Ä–µ—Å –≤–∞—à–µ–≥–æ –∫–æ—à–µ–ª—å–∫–∞"


def get_valid_address_text(lang: Lang) -> str:
    if lang == Lang.EN:
        return '''Great, last step!

Subscribe to @gemztrade before joining waitlist'''
    if lang == Lang.RU:
        return '''–û—Ç–ª–∏—á–Ω–æ, –ø–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–≥! 

–ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ @gemztrade, —á—Ç–æ–±—ã –ø–æ–ø–∞—Å—Ç—å –≤ –ª–∏—Å—Ç –æ–∂–∏–¥–∞–Ω–∏—è'''


def get_not_subscribed_text(lang: Lang) -> str:
    if lang == Lang.EN:
        return "You are not subscribed to the @gemztrade channel, subscribe and click the button below"
    if lang == Lang.RU:
        return "–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª @gemztrade, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ"


def get_restart_message(lang: Lang) -> str:
    if lang == Lang.EN:
        return "You are already in the waitlist, click the button below to return to the menu"
    if lang == Lang.RU:
        return "–í—ã —É–∂–µ –≤ WL, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –≤ –º–µ–Ω—é"


def get_share_message_text(user_id: int, lang: Lang) -> str:
    if lang == Lang.RU:
        return f'''üíé –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –ª–∏—Å—Ç—É –æ–∂–∏–¥–∞–Ω–∏—è Gemz Trade, –≤—ã–∏–≥—Ä—ã–≤–∞–π—Ç–µ WL –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ TON

Gemz Trade - #1 —Ç—Ä–µ–π–¥–∏–Ω–≥ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –Ω–∞ TON

- üèÜ –í—ã–∏–≥—Ä–∞–π—Ç–µ WL - –ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –ø–æ –≤–∞—à–µ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ, WL –±—É–¥—É—Ç —Ä–∞–∑—ã–≥—Ä–∞–Ω—ã –º–µ–∂–¥—É –ª—É—á—à–∏–º–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏.
- üí∞ –ü–æ–ª—É—á–∞–π—Ç–µ –¥–æ 30% –æ—Ç –∫–æ–º–∏—Å—Å–∏–π –≤–∞—à–∏—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤, –∫–æ–≥–¥–∞ –æ–Ω–∏ –Ω–∞—á–Ω—É—Ç —Ç–æ—Ä–≥–æ–≤–∞—Ç—å —Å Gemz.

üëâ https://t.me/GemzTradeBot?start={user_id}
'''
    if lang == Lang.EN:
        return f'''üíé Join Gemz Trade Waitlist, win WL and earn TON

Gemz Trade -  #1 Trading Platform on TON

- üèÜ Win WL - Invite friends using your referral link, WLs will be raffled between top participants.
- üí∞ Get up to 30% of your referral fees, when they start trading with Gemz.

üëâ https://t.me/GemzTradeBot?start={user_id}
'''


def get_presale_standby_text(lang: Lang):
    if lang == Lang.EN:
        return '''
<b><u>The NFT PASS sale has not started yet.</u></b>

Invite friends, be on TOP - win WL and earn TON from the referrals' trading fees

If you get to win WL, it will appear here
'''
    if lang == Lang.RU:
        return '''
<b><u>–ü—Ä–æ–¥–∞–∂–∞ NFT PASS –µ—â–µ –Ω–µ –Ω–∞—á–∞–ª–∞—Å—å.</u></b>

–ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π, –±—É–¥—å—Ç–µ –≤ –¢–û–ü–µ - –≤—ã–∏–≥—Ä–∞–π—Ç–µ WL –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ TON —Å –∫–æ–º–∏—Å—Å–∏–π –≤–∞—à–∏—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤

–ï—Å–ª–∏ –≤–∞–º —É–¥–∞—Å—Ç—Å—è –≤—ã–∏–≥—Ä–∞—Ç—å WL, –æ–Ω –ø–æ—è–≤–∏—Ç—Å—è –∑–¥–µ—Å—å
'''


def get_menu_text(rank: int, user_id: int, lang: Lang) -> str:
    if lang == Lang.EN:
        return f'''<b><u>Congratulations! You joined Gemz Trade waitlist competition.</u></b>

<b>Your waitlist place - {rank}</b>


<b>Here you can earn TON and get your WL spot.</b> How? 

üèÜ <b>Win WL</b> - Invite friends using your referral link, WLs will be raffled between top participants.

üí∞ <b>Get up to 30%</b> of your referral fees, when they start trading with Gemz


<b>Your Referral Link:</b> <code><b>https://t.me/GemzTradeBot?start={user_id}</b></code>'''
    if lang == Lang.RU:
        return f'''<b><u>–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –ø–æ–ø–∞–ª–∏ –≤ –ª–∏—Å—Ç –æ–∂–∏–¥–∞–Ω–∏—è Gemz Trade.</u></b>

<b>–í–∞—à–µ –º–µ—Å—Ç–æ –≤ –ª–∏—Å—Ç–µ –æ–∂–∏–¥–∞–Ω–∏—è - {rank}</b>


<b>–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å TON –∏ –ø–æ–ª—É—á–∏—Ç—å —Å–≤–æ–µ –º–µ—Å—Ç–æ –≤ WL.</b> –ö–∞–∫?

üèÜ <b>–í—ã–π–≥—Ä–∞–π—Ç–µ WL</b> - –ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –ø–æ —Å–≤–æ–µ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ, WL –±—É–¥—É—Ç —Ä–∞–∑—ã–≥—Ä–∞–Ω—ã –º–µ–∂–¥—É –ª—É—á—à–∏–º–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏.

üí∞ <b>–ü–æ–ª—É—á–∞–π—Ç–µ –¥–æ 30%</b> –æ—Ç –∫–æ–º–∏—Å—Å–∏–π –≤–∞—à–∏—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤, –∫–æ–≥–¥–∞ –æ–Ω–∏ –Ω–∞—á–Ω—É—Ç —Ç–æ—Ä–≥–æ–≤–∞—Ç—å —Å Gemz


<b>–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:</b> <code><b>https://t.me/GemzTradeBot?start={user_id}</b></code>'''


def get_ref_dashboard_text(referees: int, user_id: int, lang: Lang) -> str:
    if lang == Lang.EN:
        return f'''
People invited:  {referees}

üèÜ <b>Win WL</b> - Invite friends using your referral link, WLs will be raffled between top participants.

üí∞ <b>Get up to 30%</b> of your referral fees, when they start trading with Gemz

<b>Your Referral Link:</b> <code><b>https://t.me/GemzTradeBot?start={user_id}</b></code>'''
    if lang == Lang.RU:
        return f'''
–ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ –¥—Ä—É–∑–µ–π:  {referees}

üèÜ <b>–í—ã–π–≥—Ä–∞–π—Ç–µ WL</b> - –ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –ø–æ —Å–≤–æ–µ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ, WL –±—É–¥—É—Ç —Ä–∞–∑—ã–≥—Ä–∞–Ω—ã –º–µ–∂–¥—É –ª—É—á—à–∏–º–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏.

üí∞ <b>–ü–æ–ª—É—á–∞–π—Ç–µ –¥–æ 30%</b> –æ—Ç –∫–æ–º–∏—Å—Å–∏–π –≤–∞—à–∏—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤, –∫–æ–≥–¥–∞ –æ–Ω–∏ –Ω–∞—á–Ω—É—Ç —Ç–æ—Ä–≥–æ–≤–∞—Ç—å —Å Gemz

<b>–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:</b> <code><b>https://t.me/GemzTradeBot?start={user_id}</b></code>'''


def get_faq_text(lang: Lang):
    if lang == Lang.EN:
        return '''‚ùì<u><b>FAQ</b></u>

<b>1. What is Gemz Trade?</b>
Gemz Trade - #1 Trading Platform on TON. Features:
- Buy/Sell first with fast Buy and Sell functionality 
- Sniping
- Advanced PnL
- Copy Trading
- Limit Orders
- and others ;)

<b>2. What is waitlist?</b>
Waitlist - waitlist participants will get access to open beta.

<b>3. What is WL?</b>
WL - White List, access to discount on NFT PASS mint. 

<b>4. How can I earn TON?</b>
- If you invite friends and win WL NFT, you mint NFT PASS with 25% discount and sell higher on Get Gems for example. 
- Each of your invited friend will pay trading fees when trading and you will get up 30% from it.

<b>5. WL NFT Benefits</b>
WL NFT provides 25% discount for NFT PASS mint.

<b>6. NFT PASS Benefits</b>
Gemz Trade NFT PASS will provide exclusive features:
- 0% Trading Fee for EVER
- Access to closed beta - trade on Gemz first and make cash $ 
- Private Chat for PASS holders  
- and more :)

<b>7. Where to find friends?</b>
Send your referral link to chats, channels, twitter, discord, youtube, stories and so on. 
Try to invite as most as possible to get in top and win WL.'''
    if lang == Lang.RU:
        return '''‚ùì<u><b>–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã</b></u>

<b>1. –ß—Ç–æ —Ç–∞–∫–æ–µ Gemz Trade?</b>
Gemz Trade - #1 —Ç—Ä–µ–π–¥–∏–Ω–≥ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –Ω–∞ TON, –≤–∫–ª—é—á–∞—é—â–∞—è —Ç–∞–∫–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª, –∫–∞–∫:
- –ë—ã—Å—Ç—Ä–∞—è –ü–æ–∫—É–ø–∫–∞/–ü—Ä–æ–¥–∞–∂–∞
- C–Ω–∞–π–ø–∏–Ω–≥
- –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π PnL
- –ö–æ–ø–∏—Ç—Ä–µ–π–¥–∏–Ω–≥
- –õ–∏–º–∏—Ç–Ω—ã–µ –û—Ä–¥–µ—Ä–∞
- –∏ –¥—Ä—É–≥–∏–µ :)

<b>2. –ß—Ç–æ —Ç–∞–∫–æ–µ –ª–∏—Å—Ç –æ–∂–∏–¥–∞–Ω–∏—è?</b>
–õ–∏—Å—Ç –æ–∂–∏–¥–∞–Ω–∏—è - —É—á–∞—Å—Ç–Ω–∏–∫–∏ –ª–∏—Å—Ç–∞ –æ–∂–∏–¥–∞–Ω–∏—è –ø–æ–ª—É—á–∞—Ç –¥–æ—Å—Ç—É–ø –∫ –æ—Ç–∫—Ä—ã—Ç–æ–π –±–µ—Ç–∞-–≤–µ—Ä—Å–∏–∏.

<b>3. –ß—Ç–æ —Ç–∞–∫–æ–µ WL?</b>
WL - White List, –¥–æ—Å—Ç—É–ø –∫ —Å–∫–∏–¥–∫–µ –Ω–∞ –º–∏–Ω—Ç NFT PASS. 

<b>4. –ö–∞–∫ —è –º–æ–≥—É –Ω–∞ —ç—Ç–æ–º –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å?</b>
- –ï—Å–ª–∏ –≤—ã –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –¥—Ä—É–∑–µ–π –∏ –≤—ã–∏–≥—Ä–∞–µ—Ç–µ WL NFT, –≤—ã —Å–º–∏–Ω—Ç–∏—Ç–µ NFT PASS —Å–æ —Å–∫–∏–¥–∫–æ–π 25% –∏ –ø—Ä–æ–¥–∞–¥–∏—Ç–µ –¥–æ—Ä–æ–∂–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä, –Ω–∞ Get Gems. 
- –ö–∞–∂–¥—ã–π –∏–∑ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö –≤–∞–º–∏ –¥—Ä—É–∑–µ–π –±—É–¥–µ—Ç –ø–ª–∞—Ç–∏—Ç—å —Ç–æ—Ä–≥–æ–≤—ã–µ –∫–æ–º–∏—Å—Å–∏–∏ –ø—Ä–∏ —Ç—Ä–µ–π–¥–∏–Ω–≥–µ, –∞ –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –¥–æ 30% –æ—Ç —ç—Ç–∏—Ö –∫–æ–º–∏—Å—Å–∏–π.

<b>5. –ß—Ç–æ –¥–∞–µ—Ç WL NFT?</b>
WL NFT –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç 25% —Å–∫–∏–¥–∫—É –Ω–∞ –º–∏–Ω—Ç NFT PASS.

<b>6. –ß—Ç–æ –¥–∞–µ—Ç NFT PASS?</b>
Gemz Trade NFT PASS –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
- 0% –∫–æ–º–∏—Å—Å–∏–∏ –∑–∞ —Ç—Ä–µ–π–¥–∏–Ω–≥ –ù–ê–í–°–ï–ì–î–ê
- –î–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç–æ–π –±–µ—Ç–∞-–≤–µ—Ä—Å–∏–∏ - —Ç–æ—Ä–≥—É–π—Ç–µ –Ω–∞ Gemz –ø–µ—Ä–≤—ã–º–∏ –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ –∫—ç—à $
- –ü—Ä–∏–≤–∞—Ç–Ω—ã–π —á–∞—Ç –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ NFT PASS  
- –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ :)

<b>7. –ì–¥–µ –Ω–∞–π—Ç–∏ –¥—Ä—É–∑–µ–π?</b>
–û–ø—É–±–ª–∏–∫—É–π—Ç–µ —Å–≤–æ—é —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –≤ —á–∞—Ç–∞—Ö, –∫–∞–Ω–∞–ª–∞—Ö, twitter, discord, youtube, stories –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ. 
–ü–æ—Å—Ç–∞—Ä–∞–π—Ç–µ—Å—å –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –∫–∞–∫ –º–æ–∂–Ω–æ –±–æ–ª—å—à–µ –¥—Ä—É–∑–µ–π, —á—Ç–æ–±—ã –ø–æ–ø–∞—Å—Ç—å –≤ —Ç–æ–ø –∏ –≤—ã–∏–≥—Ä–∞—Ç—å WL.'''


def get_admin_statistics_text(total_users: int, total_users_subscribed: int) -> str:
    return f'''Statistics:
    Total users: {total_users},
    Total users subscribed: {total_users_subscribed}
    '''


def get_admin_message_button_title_confirmation(button_title: str) -> str:
    return f"Is this correct title for the button?\n\n{button_title}"


def get_admin_message_button_url_confirmation(button_url: str) -> str:
    return f"Is this correct url for the button?\n\n{button_url}"


def get_same_address_exists_text(lang: Lang) -> str:
    if lang == Lang.EN:
        return "A user with the same address already exists. Try with another address"
    if lang == Lang.RU:
        return "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º –∞–¥—Ä–µ—Å–æ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –¥—Ä—É–≥–∏–º –∞–¥—Ä–µ—Å–æ–º"


def get_choose_language_keyboard() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup([
        [InlineKeyboardButton('üá¨üáß English', callback_data="choose_language_en")],
        [InlineKeyboardButton('üá∑üá∫ Russian', callback_data="choose_language_ru")]
    ])


def get_subscription_check_keyboard(lang: Lang) -> InlineKeyboardMarkup:
    if lang == Lang.EN:
        return InlineKeyboardMarkup([[
            InlineKeyboardButton('Check', callback_data="subscription_check")
        ]])
    if lang == Lang.RU:
        return InlineKeyboardMarkup([[
            InlineKeyboardButton('–ü—Ä–æ–≤–µ—Ä–∏—Ç—å', callback_data="subscription_check")
        ]])


def get_menu_keyboard(user_id: int, lang: Lang) -> InlineKeyboardMarkup:
    if lang == Lang.EN:
        return InlineKeyboardMarkup([
            [InlineKeyboardButton('Share Referral Link',
                                  url=f"https://t.me/share/url?url= &text={urllib.parse.quote(get_share_message_text(user_id, Lang.EN))}")],
            [InlineKeyboardButton('Referral Dashboard', callback_data="ref_dashboard")],
            [InlineKeyboardButton('NFT PASS SALE', callback_data="whitelist_presale")],
            [InlineKeyboardButton('FAQ', callback_data="faq")]
        ])
    if lang == Lang.RU:
        return InlineKeyboardMarkup([
            [InlineKeyboardButton('–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π',
                                  url=f"https://t.me/share/url?url= &text={urllib.parse.quote(get_share_message_text(user_id, Lang.RU))}")],
            [InlineKeyboardButton('–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–≤–æ–¥–∫–∞', callback_data="ref_dashboard")],
            [InlineKeyboardButton('NFT PASS SALE', callback_data="whitelist_presale")],
            [InlineKeyboardButton('–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã', callback_data="faq")]
        ])


def get_return_to_menu_keyboard(lang: Lang, faq: bool) -> InlineKeyboardMarkup:
    if faq:
        if lang == lang.RU:
            return InlineKeyboardMarkup([[
                InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é', callback_data="return_to_menu"),
                InlineKeyboardButton('–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã', callback_data="faq")
            ]])
        if lang == lang.EN:
            return InlineKeyboardMarkup([[
                InlineKeyboardButton('Return to menu', callback_data="return_to_menu"),
                InlineKeyboardButton('FAQ', callback_data="faq")
            ]])
    else:
        if lang == lang.RU:
            return InlineKeyboardMarkup([[
                InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é', callback_data="return_to_menu")
            ]])
        if lang == lang.EN:
            return InlineKeyboardMarkup([[
                InlineKeyboardButton('Return to menu', callback_data="return_to_menu")
            ]])


def get_admin_panel_keyboard() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup([[
        InlineKeyboardButton('Statistics', callback_data="admin_statistics"),
        InlineKeyboardButton('Send message to users', callback_data="admin_send_message"),
        InlineKeyboardButton('Export database to CSV', callback_data="admin_export_csv")
    ]])


def get_admin_statistics_keyboard() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup([[
        InlineKeyboardButton('Refresh', callback_data="admin_statistics"),
        InlineKeyboardButton('Return', callback_data="return_to_admin_panel")
    ]])


def get_admin_message_confirmation_keyboard() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup([
        [InlineKeyboardButton('Yes', callback_data="admin_message_confirmation_yes")],
        [InlineKeyboardButton('Retry', callback_data="admin_message_confirmation_retry")],
        [InlineKeyboardButton('Abort', callback_data="return_to_admin_panel")]
    ])


def get_admin_button_question_keyboard() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup([
        [InlineKeyboardButton('Add button', callback_data="admin_message_button_add")],
        [InlineKeyboardButton('Next', callback_data="admin_message_confirmation_send")]
    ])


def get_admin_message_button_title_confirmation_keyboard() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup([
        [InlineKeyboardButton('Yes', callback_data="admin_message_button_title_confirmation_yes")],
        [InlineKeyboardButton('Retry', callback_data="admin_message_button_title_confirmation_retry")],
        [InlineKeyboardButton('Abort', callback_data="return_to_admin_panel")]
    ])


def get_admin_message_button_url_confirmation_keyboard() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup([
        [InlineKeyboardButton('Yes', callback_data="admin_message_confirmation_yes")],
        [InlineKeyboardButton('Retry', callback_data="admin_message_button_url_confirmation_retry")],
        [InlineKeyboardButton('Abort', callback_data="return_to_admin_panel")]
    ])


def get_admin_message_confirmation_send_keyboard() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup([
        [InlineKeyboardButton('Yes', callback_data="admin_send_message_confirmed")],
        [InlineKeyboardButton('Abort', callback_data="return_to_admin_panel")]
    ])


def get_faq_keyboard(lang: Lang) -> ReplyKeyboardMarkup:
    if lang == Lang.EN:
        return ReplyKeyboardMarkup([[
            KeyboardButton("FAQ")
        ]])
    if lang == Lang.RU:
        return ReplyKeyboardMarkup([[
            KeyboardButton("–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã")
        ]])
